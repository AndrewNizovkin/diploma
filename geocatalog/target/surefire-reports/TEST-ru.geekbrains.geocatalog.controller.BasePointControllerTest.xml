<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="6.543" tests="11" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/andrew/MyProjects/diploma/geocatalog/target/test-classes:/home/andrew/MyProjects/diploma/geocatalog/target/classes:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.5/spring-boot-starter-data-jpa-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.5/spring-boot-starter-aop-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/spring-aop/6.1.6/spring-aop-6.1.6.jar:/home/andrew/.m2/repository/org/aspectj/aspectjweaver/1.9.22/aspectjweaver-1.9.22.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.5/spring-boot-starter-jdbc-3.2.5.jar:/home/andrew/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/andrew/.m2/repository/org/springframework/spring-jdbc/6.1.6/spring-jdbc-6.1.6.jar:/home/andrew/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/home/andrew/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/andrew/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/andrew/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/andrew/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/andrew/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/andrew/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/andrew/.m2/repository/net/bytebuddy/byte-buddy/1.14.13/byte-buddy-1.14.13.jar:/home/andrew/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/andrew/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/andrew/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/andrew/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/andrew/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/andrew/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/andrew/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/andrew/.m2/repository/org/springframework/data/spring-data-jpa/3.2.5/spring-data-jpa-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/data/spring-data-commons/3.2.5/spring-data-commons-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/spring-orm/6.1.6/spring-orm-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-context/6.1.6/spring-context-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-tx/6.1.6/spring-tx-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-beans/6.1.6/spring-beans-6.1.6.jar:/home/andrew/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/andrew/.m2/repository/org/slf4j/slf4j-api/2.0.13/slf4j-api-2.0.13.jar:/home/andrew/.m2/repository/org/springframework/spring-aspects/6.1.6/spring-aspects-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.5/spring-boot-starter-web-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.5/spring-boot-starter-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot/3.2.5/spring-boot-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.5/spring-boot-autoconfigure-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.5/spring-boot-starter-logging-3.2.5.jar:/home/andrew/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/home/andrew/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/home/andrew/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/andrew/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/andrew/.m2/repository/org/slf4j/jul-to-slf4j/2.0.13/jul-to-slf4j-2.0.13.jar:/home/andrew/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.5/spring-boot-starter-json-3.2.5.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.5/spring-boot-starter-tomcat-3.2.5.jar:/home/andrew/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.20/tomcat-embed-core-10.1.20.jar:/home/andrew/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.20/tomcat-embed-websocket-10.1.20.jar:/home/andrew/.m2/repository/org/springframework/spring-web/6.1.6/spring-web-6.1.6.jar:/home/andrew/.m2/repository/io/micrometer/micrometer-observation/1.12.5/micrometer-observation-1.12.5.jar:/home/andrew/.m2/repository/io/micrometer/micrometer-commons/1.12.5/micrometer-commons-1.12.5.jar:/home/andrew/.m2/repository/org/springframework/spring-webmvc/6.1.6/spring-webmvc-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-expression/6.1.6/spring-expression-6.1.6.jar:/home/andrew/.m2/repository/org/postgresql/postgresql/42.6.2/postgresql-42.6.2.jar:/home/andrew/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/andrew/.m2/repository/org/projectlombok/lombok/1.18.32/lombok-1.18.32.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.5/spring-boot-starter-test-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-test/3.2.5/spring-boot-test-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.5/spring-boot-test-autoconfigure-3.2.5.jar:/home/andrew/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/andrew/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/andrew/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/home/andrew/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/home/andrew/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/home/andrew/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/home/andrew/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/andrew/.m2/repository/org/awaitility/awaitility/4.2.1/awaitility-4.2.1.jar:/home/andrew/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/andrew/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/home/andrew/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/home/andrew/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/andrew/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/home/andrew/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/andrew/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/home/andrew/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/home/andrew/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/home/andrew/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/andrew/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.13/byte-buddy-agent-1.14.13.jar:/home/andrew/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/andrew/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/andrew/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/andrew/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/andrew/.m2/repository/org/springframework/spring-core/6.1.6/spring-core-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-jcl/6.1.6/spring-jcl-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-test/6.1.6/spring-test-6.1.6.jar:/home/andrew/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/andrew/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-webflux/3.2.5/spring-boot-starter-webflux-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-reactor-netty/3.2.5/spring-boot-starter-reactor-netty-3.2.5.jar:/home/andrew/.m2/repository/io/projectreactor/netty/reactor-netty-http/1.1.18/reactor-netty-http-1.1.18.jar:/home/andrew/.m2/repository/io/netty/netty-codec-http/4.1.109.Final/netty-codec-http-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-common/4.1.109.Final/netty-common-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-buffer/4.1.109.Final/netty-buffer-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-transport/4.1.109.Final/netty-transport-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-codec/4.1.109.Final/netty-codec-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-handler/4.1.109.Final/netty-handler-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-codec-http2/4.1.109.Final/netty-codec-http2-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-resolver-dns/4.1.109.Final/netty-resolver-dns-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-resolver/4.1.109.Final/netty-resolver-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-codec-dns/4.1.109.Final/netty-codec-dns-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-resolver-dns-native-macos/4.1.109.Final/netty-resolver-dns-native-macos-4.1.109.Final-osx-x86_64.jar:/home/andrew/.m2/repository/io/netty/netty-resolver-dns-classes-macos/4.1.109.Final/netty-resolver-dns-classes-macos-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-transport-native-epoll/4.1.109.Final/netty-transport-native-epoll-4.1.109.Final-linux-x86_64.jar:/home/andrew/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.109.Final/netty-transport-native-unix-common-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.109.Final/netty-transport-classes-epoll-4.1.109.Final.jar:/home/andrew/.m2/repository/io/projectreactor/netty/reactor-netty-core/1.1.18/reactor-netty-core-1.1.18.jar:/home/andrew/.m2/repository/io/netty/netty-handler-proxy/4.1.109.Final/netty-handler-proxy-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-codec-socks/4.1.109.Final/netty-codec-socks-4.1.109.Final.jar:/home/andrew/.m2/repository/org/springframework/spring-webflux/6.1.6/spring-webflux-6.1.6.jar:/home/andrew/.m2/repository/io/projectreactor/reactor-core/3.6.5/reactor-core-3.6.5.jar:/home/andrew/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/andrew/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.3.0/springdoc-openapi-starter-webmvc-ui-2.3.0.jar:/home/andrew/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.3.0/springdoc-openapi-starter-webmvc-api-2.3.0.jar:/home/andrew/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.3.0/springdoc-openapi-starter-common-2.3.0.jar:/home/andrew/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.19/swagger-core-jakarta-2.2.19.jar:/home/andrew/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/home/andrew/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.19/swagger-annotations-jakarta-2.2.19.jar:/home/andrew/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.19/swagger-models-jakarta-2.2.19.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.4/jackson-dataformat-yaml-2.15.4.jar:/home/andrew/.m2/repository/org/webjars/swagger-ui/5.10.3/swagger-ui-5.10.3.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.5/spring-boot-starter-validation-3.2.5.jar:/home/andrew/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.20/tomcat-embed-el-10.1.20.jar:/home/andrew/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/andrew/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="catalina.useNaming" value="false"/>
    <property name="user.timezone" value="Europe/Moscow"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="RU"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/jdk-17-oracle-x64/lib"/>
    <property name="sun.java.command" value="/home/andrew/MyProjects/diploma/geocatalog/target/surefire/surefirebooter-20240503082455374_3.jar /home/andrew/MyProjects/diploma/geocatalog/target/surefire 2024-05-03T08-24-55_230-jvmRun1 surefire-20240503082455374_1tmp surefire_0-20240503082455374_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/andrew/MyProjects/diploma/geocatalog/target/test-classes:/home/andrew/MyProjects/diploma/geocatalog/target/classes:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.5/spring-boot-starter-data-jpa-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.5/spring-boot-starter-aop-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/spring-aop/6.1.6/spring-aop-6.1.6.jar:/home/andrew/.m2/repository/org/aspectj/aspectjweaver/1.9.22/aspectjweaver-1.9.22.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.5/spring-boot-starter-jdbc-3.2.5.jar:/home/andrew/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/andrew/.m2/repository/org/springframework/spring-jdbc/6.1.6/spring-jdbc-6.1.6.jar:/home/andrew/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/home/andrew/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/andrew/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/andrew/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/andrew/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/andrew/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/home/andrew/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/home/andrew/.m2/repository/net/bytebuddy/byte-buddy/1.14.13/byte-buddy-1.14.13.jar:/home/andrew/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/andrew/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/andrew/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/andrew/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/andrew/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/andrew/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/andrew/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/andrew/.m2/repository/org/springframework/data/spring-data-jpa/3.2.5/spring-data-jpa-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/data/spring-data-commons/3.2.5/spring-data-commons-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/spring-orm/6.1.6/spring-orm-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-context/6.1.6/spring-context-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-tx/6.1.6/spring-tx-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-beans/6.1.6/spring-beans-6.1.6.jar:/home/andrew/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/andrew/.m2/repository/org/slf4j/slf4j-api/2.0.13/slf4j-api-2.0.13.jar:/home/andrew/.m2/repository/org/springframework/spring-aspects/6.1.6/spring-aspects-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.5/spring-boot-starter-web-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.5/spring-boot-starter-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot/3.2.5/spring-boot-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.5/spring-boot-autoconfigure-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.5/spring-boot-starter-logging-3.2.5.jar:/home/andrew/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/home/andrew/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/home/andrew/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/home/andrew/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/home/andrew/.m2/repository/org/slf4j/jul-to-slf4j/2.0.13/jul-to-slf4j-2.0.13.jar:/home/andrew/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.5/spring-boot-starter-json-3.2.5.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.5/spring-boot-starter-tomcat-3.2.5.jar:/home/andrew/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.20/tomcat-embed-core-10.1.20.jar:/home/andrew/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.20/tomcat-embed-websocket-10.1.20.jar:/home/andrew/.m2/repository/org/springframework/spring-web/6.1.6/spring-web-6.1.6.jar:/home/andrew/.m2/repository/io/micrometer/micrometer-observation/1.12.5/micrometer-observation-1.12.5.jar:/home/andrew/.m2/repository/io/micrometer/micrometer-commons/1.12.5/micrometer-commons-1.12.5.jar:/home/andrew/.m2/repository/org/springframework/spring-webmvc/6.1.6/spring-webmvc-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-expression/6.1.6/spring-expression-6.1.6.jar:/home/andrew/.m2/repository/org/postgresql/postgresql/42.6.2/postgresql-42.6.2.jar:/home/andrew/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/andrew/.m2/repository/org/projectlombok/lombok/1.18.32/lombok-1.18.32.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.5/spring-boot-starter-test-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-test/3.2.5/spring-boot-test-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.5/spring-boot-test-autoconfigure-3.2.5.jar:/home/andrew/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/andrew/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/andrew/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/home/andrew/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/home/andrew/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/home/andrew/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/home/andrew/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/andrew/.m2/repository/org/awaitility/awaitility/4.2.1/awaitility-4.2.1.jar:/home/andrew/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/andrew/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/home/andrew/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/home/andrew/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/andrew/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/home/andrew/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/andrew/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/home/andrew/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/home/andrew/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/home/andrew/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/home/andrew/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.13/byte-buddy-agent-1.14.13.jar:/home/andrew/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/andrew/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/home/andrew/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/andrew/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/andrew/.m2/repository/org/springframework/spring-core/6.1.6/spring-core-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-jcl/6.1.6/spring-jcl-6.1.6.jar:/home/andrew/.m2/repository/org/springframework/spring-test/6.1.6/spring-test-6.1.6.jar:/home/andrew/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/andrew/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-webflux/3.2.5/spring-boot-starter-webflux-3.2.5.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-reactor-netty/3.2.5/spring-boot-starter-reactor-netty-3.2.5.jar:/home/andrew/.m2/repository/io/projectreactor/netty/reactor-netty-http/1.1.18/reactor-netty-http-1.1.18.jar:/home/andrew/.m2/repository/io/netty/netty-codec-http/4.1.109.Final/netty-codec-http-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-common/4.1.109.Final/netty-common-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-buffer/4.1.109.Final/netty-buffer-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-transport/4.1.109.Final/netty-transport-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-codec/4.1.109.Final/netty-codec-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-handler/4.1.109.Final/netty-handler-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-codec-http2/4.1.109.Final/netty-codec-http2-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-resolver-dns/4.1.109.Final/netty-resolver-dns-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-resolver/4.1.109.Final/netty-resolver-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-codec-dns/4.1.109.Final/netty-codec-dns-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-resolver-dns-native-macos/4.1.109.Final/netty-resolver-dns-native-macos-4.1.109.Final-osx-x86_64.jar:/home/andrew/.m2/repository/io/netty/netty-resolver-dns-classes-macos/4.1.109.Final/netty-resolver-dns-classes-macos-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-transport-native-epoll/4.1.109.Final/netty-transport-native-epoll-4.1.109.Final-linux-x86_64.jar:/home/andrew/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.109.Final/netty-transport-native-unix-common-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.109.Final/netty-transport-classes-epoll-4.1.109.Final.jar:/home/andrew/.m2/repository/io/projectreactor/netty/reactor-netty-core/1.1.18/reactor-netty-core-1.1.18.jar:/home/andrew/.m2/repository/io/netty/netty-handler-proxy/4.1.109.Final/netty-handler-proxy-4.1.109.Final.jar:/home/andrew/.m2/repository/io/netty/netty-codec-socks/4.1.109.Final/netty-codec-socks-4.1.109.Final.jar:/home/andrew/.m2/repository/org/springframework/spring-webflux/6.1.6/spring-webflux-6.1.6.jar:/home/andrew/.m2/repository/io/projectreactor/reactor-core/3.6.5/reactor-core-3.6.5.jar:/home/andrew/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/andrew/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.3.0/springdoc-openapi-starter-webmvc-ui-2.3.0.jar:/home/andrew/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.3.0/springdoc-openapi-starter-webmvc-api-2.3.0.jar:/home/andrew/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.3.0/springdoc-openapi-starter-common-2.3.0.jar:/home/andrew/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.19/swagger-core-jakarta-2.2.19.jar:/home/andrew/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/home/andrew/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.19/swagger-annotations-jakarta-2.2.19.jar:/home/andrew/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.19/swagger-models-jakarta-2.2.19.jar:/home/andrew/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.4/jackson-dataformat-yaml-2.15.4.jar:/home/andrew/.m2/repository/org/webjars/swagger-ui/5.10.3/swagger-ui-5.10.3.jar:/home/andrew/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.5/spring-boot-starter-validation-3.2.5.jar:/home/andrew/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.20/tomcat-embed-el-10.1.20.jar:/home/andrew/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/andrew/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/andrew"/>
    <property name="user.language" value="ru"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-01-16"/>
    <property name="java.home" value="/usr/lib/jvm/jdk-17-oracle-x64"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/andrew/MyProjects/diploma/geocatalog"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/andrew/MyProjects/diploma/geocatalog/target/surefire/surefirebooter-20240503082455374_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.10+11-LTS-240"/>
    <property name="user.name" value="andrew"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="5.15.0-105-generic"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/home/andrew/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="idea.version" value="2024.1.1"/>
    <property name="catalina.home" value="/tmp/tomcat.8180.6700547791932469434"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.10"/>
    <property name="user.dir" value="/home/andrew/MyProjects/diploma/geocatalog"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="7639"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="catalina.base" value="/tmp/tomcat.8180.6700547791932469434"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="17.0.10+11-LTS-240"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[geocatalog] "/>
  </properties>
  <testcase name="getAllBasePointsTest" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.672">
    <system-out><![CDATA[2024-05-03T08:24:58.965+03:00  INFO 7639 --- [geocatalog] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [ru.geekbrains.geocatalog.controller.BasePointControllerTest]: BasePointControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-05-03T08:24:59.078+03:00  INFO 7639 --- [geocatalog] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration ru.geekbrains.geocatalog.GeoCatalogApplication for test class ru.geekbrains.geocatalog.controller.BasePointControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2024-05-03T08:24:59.146+03:00  INFO 7639 --- [geocatalog] [           main] r.g.g.c.BasePointControllerTest          : Starting BasePointControllerTest using Java 17.0.10 with PID 7639 (started by andrew in /home/andrew/MyProjects/diploma/geocatalog)
2024-05-03T08:24:59.147+03:00  INFO 7639 --- [geocatalog] [           main] r.g.g.c.BasePointControllerTest          : The following 1 profile is active: "test"
2024-05-03T08:24:59.949+03:00  INFO 7639 --- [geocatalog] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-03T08:25:00.105+03:00  INFO 7639 --- [geocatalog] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 145 ms. Found 1 JPA repository interface.
2024-05-03T08:25:00.745+03:00  INFO 7639 --- [geocatalog] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8180 (http)
2024-05-03T08:25:00.757+03:00  INFO 7639 --- [geocatalog] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-05-03T08:25:00.758+03:00  INFO 7639 --- [geocatalog] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-03T08:25:00.820+03:00  INFO 7639 --- [geocatalog] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-05-03T08:25:00.821+03:00  INFO 7639 --- [geocatalog] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1663 ms
2024-05-03T08:25:00.998+03:00  INFO 7639 --- [geocatalog] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-03T08:25:01.050+03:00  INFO 7639 --- [geocatalog] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-05-03T08:25:01.097+03:00  INFO 7639 --- [geocatalog] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-03T08:25:01.201+03:00  INFO 7639 --- [geocatalog] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-03T08:25:01.227+03:00  INFO 7639 --- [geocatalog] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-05-03T08:25:01.427+03:00  INFO 7639 --- [geocatalog] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:test user=ANDREW
2024-05-03T08:25:01.429+03:00  INFO 7639 --- [geocatalog] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-05-03T08:25:02.203+03:00  INFO 7639 --- [geocatalog] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists points cascade 
Hibernate: create table points (id bigint generated by default as identity, x bigint, y bigint, z bigint, accuracy_class varchar(255), coordinate_system varchar(255), name varchar(255), sheet varchar(255), primary key (id))
2024-05-03T08:25:02.238+03:00  INFO 7639 --- [geocatalog] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-03T08:25:02.557+03:00  INFO 7639 --- [geocatalog] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-05-03T08:25:03.338+03:00  WARN 7639 --- [geocatalog] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-05-03T08:25:03.993+03:00  INFO 7639 --- [geocatalog] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8180 (http) with context path ''
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
2024-05-03T08:25:04.095+03:00  INFO 7639 --- [geocatalog] [           main] r.g.g.c.BasePointControllerTest          : Started BasePointControllerTest in 5.012 seconds (process running for 8.626)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
2024-05-03T08:25:04.729+03:00  INFO 7639 --- [geocatalog] [nio-8180-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-03T08:25:04.730+03:00  INFO 7639 --- [geocatalog] [nio-8180-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-05-03T08:25:04.732+03:00  INFO 7639 --- [geocatalog] [nio-8180-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
]]></system-out>
  </testcase>
  <testcase name="createBasePointTest" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.096">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
]]></system-out>
  </testcase>
  <testcase name="getBasePointByIdNotFound" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.055">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="getBasePointByIdTestSuccess" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.022">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="getBasePointByNameNotFound" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.047">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.name like ? escape ''
]]></system-out>
  </testcase>
  <testcase name="getByAreaTest" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.203">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where (bp1_0.x between ? and ?) and (bp1_0.y between ? and ?)
]]></system-out>
  </testcase>
  <testcase name="getBasePointBySheetNotFound" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.027">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.sheet like ? escape ''
]]></system-out>
  </testcase>
  <testcase name="updateBasePointTest" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.032">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: update points set accuracy_class=?,coordinate_system=?,name=?,sheet=?,x=?,y=?,z=? where id=?
]]></system-out>
  </testcase>
  <testcase name="getBasePointBySheetTestSuccess" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.023">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.sheet like ? escape ''
]]></system-out>
  </testcase>
  <testcase name="removeBasePointByIdTest" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.039">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: delete from points where id=?
Hibernate: delete from points where id=?
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.id=?
Hibernate: delete from points where id=?
]]></system-out>
  </testcase>
  <testcase name="getBasePointByNameTestSuccess" classname="ru.geekbrains.geocatalog.controller.BasePointControllerTest" time="0.016">
    <system-out><![CDATA[Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into points (accuracy_class,coordinate_system,name,sheet,x,y,z,id) values (?,?,?,?,?,?,?,default)
Hibernate: select bp1_0.id,bp1_0.accuracy_class,bp1_0.coordinate_system,bp1_0.name,bp1_0.sheet,bp1_0.x,bp1_0.y,bp1_0.z from points bp1_0 where bp1_0.name like ? escape ''
]]></system-out>
  </testcase>
</testsuite>